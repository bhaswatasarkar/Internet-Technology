package clientservermodel;

import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.HashMap;

public class Server implements Runnable{
	//HashMap<ClientPort,HashMap<key,value>>
	public HashMap<Integer,HashMap<String,String>> database = new HashMap<Integer,HashMap<String,String>>();
	private static ServerSocket s;
	private Socket socket;
	private BufferedReader in;
	private PrintWriter out;
	
	public Server(Socket socket) throws IOException{
		this.socket = socket;
		in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
		out = new PrintWriter(socket.getOutputStream(),true);
	}

	@Override
	public void run() {
			
			
			try {
				while(true) {
					String str = in.readLine();
					out.println(str);
				}
			} catch (IOException e) {
				
				e.printStackTrace();
			}
//			finally {
//				try {
//					in.close();
//					out.close();
//					socket.close();
//				} catch (IOException e) {
//					e.printStackTrace();
//				}
//			}
			
		
	}

	
	public static void main(String[] args) throws IOException {
		 s = new ServerSocket(5555);
		 System.out.println("Server is live");
		 while(true) {
			 System.out.println("Waiting for connection..");
			 Socket socket =  s.accept();
			 System.out.println("Client accepted");
			 Server server = new Server(socket);
	         Thread thread = new Thread(server);
	         thread.start();
		 }
	}
}
